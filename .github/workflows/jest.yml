name: Client/Server test with Jest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
    client-test:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [12.x, 14.x, 16.x]

      steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: client-test
        run: |
          cd client
          npm install
          npm run-script test
    server-test:
      runs-on: ubuntu-latest

      env: 
        # Configure server/src/mysql-pool.ts
        MYSQL_HOST: localhost
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: games_website_test
      
      # Container to run SQL service for tests
      #services:
      #  mysql:
      #    image: mysql:latest
      #    env:
      #      MYSQL_USER: $MYSQL_USER
      #      MYSQL_PASSWORD: $MYSQL_PASSWORD
      #      MYSQL_DATABASE: $MYSQL_DATABASE
      #      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
      #    ports:
      #      - 3306
      #    options: >-
      #      --health-cmd="mysqladmin ping" 
      #      --health-interval=10s 
      #      --health-timeout=5s 
      #      --health-retries=3

      strategy:
        matrix:
          node-version: [12.x, 14.x, 16.x]

      steps:
        - uses: actions/checkout@v2

        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}

        - name: server-test
          run: |
            sudo /etc/init.d/mysql start
            mysql -e 'CREATE DATABASE ${{ env.MYSQL_DATABASE }};' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
            echo "Database created"
            mysql -e 'SHOW DATABASES;' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
            echo "Databases listed"
            mysql -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} --verbose ${{ env.MYSQL_DATABASE }} < .github/workflows/db_structure.sql
            echo "Database structure applied"
            mysql -e 'ALTER USER '${{ env.MYSQL_USER }}'@'${{ env.MYSQL_HOST }}' IDENTIFIED WITH mysql_native_password BY '${{ env.MYSQL_PASSWORD }}';' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
            echo "Database setup done"
            cd server
            touch test/config.ts
            npm install
            npm run-script test
          
    
